
include #data/bp4.meld

type route edge(node, node).
type coord(node, int).
type potential(node, list float).
type belief(node, int, list float).
type globalpotential(node, list float).
type message(node, int, node, list float).

type beliefmul(node, int, sum list float [-> edge]).

extern list float normalize(list float).
extern list float damp(list float, list float, float).
extern list float divide(list float, list float).
extern list float convolve(list float, list float).
extern list float addfloatlists(list float, list float).

const iterations = 10.
const damping = 0.1.

beliefmul(A, I + 1, L) :- edge(A, B), message(B, I, A, L).

belief(A, I, normalize(addfloatlists(L, P))) :-
	beliefmul(A, I, L), potential(A, P), I <= iterations.

message(A, I + 1, B, damp(Convolved, OldOut, damping)) :-
	I <= iterations,
	belief(A, NI, Belief),
	globalpotential(A, GP),
	NI = I + 1,
	edge(A, B),
	message(B, I, A, OldIn),
	message(A, I, B, OldOut),
	Cavity = normalize(divide(Belief, OldIn)),
	Convolved = normalize(convolve(GP, Cavity)).


