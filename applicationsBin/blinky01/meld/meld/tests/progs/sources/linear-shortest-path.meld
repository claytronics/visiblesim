type linear path(node, int, int).

priority @order @asc.

const finalnode = @1.
const startnode = @4.
const used = 1.
const notused = 0.

path(startnode, 0, 0).
set-priority(startnode, 1.0).

path(A, B, used), path(A, B, notused)
	-o path(A, B, used).

path(A, B1, X), path(A, B2, Y), B1 <= B2
   -o path(A, B1, X).

path(A, D, notused), A <> finalnode
   -o {B, W | !edge(A, B, W) | path(B, D + W, notused), set-priority(B, float(D + W))}, path(A, D, used).


