const unsigned char meld_prog[] = {
/* NUMBER OF PREDICATES */
0xc, 
/* NUMBER OF RULES */
0x1, 
/* OFFSETS TO PREDICATE DESCRIPTORS */
0x1c, 0, 
0x22, 0, 
0x29, 0, 
0x30, 0, 
0x36, 0, 
0x3e, 0, 
0x45, 0, 
0x4c, 0, 
0x53, 0, 
0x59, 0, 
0x60, 0, 
0x67, 0, 
/* OFFSETS TO RULE DESCRIPTORS */
0x6f, 0, 
/* PREDICATE DESCRIPTORS */
0x74, 0, 0x4, 0, 0, 0, 
0x75, 0, 0x12, 0, 0x1, 0x1, 0, 
0x76, 0, 0x2, 0, 0x1, 0x1, 0, 
0xe8, 0, 0x4, 0, 0x1, 0, 
0xe9, 0, 0x22, 0, 0, 0x2, 0x2, 0, 
0xf0, 0x1, 0x2, 0, 0x1, 0x1, 0, 
0xf1, 0x1, 0x3, 0x20, 0x1, 0x1, 0, 
0x30, 0x2, 0x22, 0, 0, 0x1, 0x2, 
0x68, 0x2, 0x2, 0, 0x1, 0, 
0x7b, 0x2, 0x22, 0, 0, 0x1, 0x2, 
0xb3, 0x2, 0x22, 0, 0, 0x1, 0x2, 
0xde, 0x2, 0x2, 0, 0x1, 0x2, 0x2, 0, 
/* RULE DESCRIPTORS */
0x77, 0x3, 0, 0x1, 0, 
/* PREDICATE BYTECODE */
/* Predicate 0: */0, 
/* Predicate 1: */0, 
/* Predicate 2: */0x10, 0x3, 0, 0, 0, 0x22, 0, 0, 0x2, 0x1f, 0x4, 0, 0, 0, 0x3, 0x3b, 0x2, 0x3, 0x1, 0x60, 0x1, 0x28, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0x2, 0x1, 0x1, 0x1b, 0, 0, 0, 0x22, 0, 0, 0, 0x1, 0, 0x1, 0x5, 0, 0, 0, 0x11, 0x40, 0x8, 0x2, 0x78, 0x2, 0x1, 0x22, 0, 0, 0x2, 0x1f, 0x5, 0, 0, 0, 0x3, 0x3b, 0x2, 0x3, 0x1, 0x60, 0x1, 0x28, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0x2, 0x1, 0x1, 0x1b, 0, 0, 0, 0x22, 0, 0, 0, 0x1, 0, 0x1, 0x4, 0, 0, 0, 0x11, 0x40, 0x8, 0x2, 0x78, 0x2, 0x1, 0, 
/* Predicate 3: */0, 
/* Predicate 4: */0x10, 0x1, 0, 0, 0, 0x22, 0x1, 0, 0x2, 0x1f, 0x4, 0, 0, 0, 0x3, 0x3b, 0x2, 0x3, 0x1, 0x60, 0x1, 0x11, 0, 0, 0, 0x11, 0x40, 0x7, 0x1, 0x25, 0, 0, 0, 0x1, 0x78, 0x1, 0x10, 0x2, 0, 0, 0, 0x22, 0x1, 0, 0x2, 0x1f, 0x5, 0, 0, 0, 0x3, 0x3b, 0x2, 0x3, 0x1, 0x60, 0x1, 0x11, 0, 0, 0, 0x11, 0x40, 0x7, 0x1, 0x25, 0, 0, 0, 0x1, 0x78, 0x1, 0x10, 0x4, 0, 0, 0, 0x22, 0x1, 0, 0x2, 0x1f, 0x1, 0, 0, 0, 0x3, 0x3b, 0x2, 0x3, 0x1, 0x60, 0x1, 0x11, 0, 0, 0, 0x11, 0x40, 0x9, 0x1, 0x25, 0, 0, 0, 0x1, 0x78, 0x1, 0x10, 0x5, 0, 0, 0, 0x22, 0x1, 0, 0x2, 0x1f, 0x2, 0, 0, 0, 0x3, 0x3b, 0x2, 0x3, 0x1, 0x60, 0x1, 0x11, 0, 0, 0, 0x11, 0x40, 0x9, 0x1, 0x25, 0, 0, 0, 0x1, 0x78, 0x1, 0x10, 0x6, 0, 0, 0, 0x22, 0x1, 0, 0x2, 0x1f, 0, 0, 0, 0, 0x3, 0x3b, 0x2, 0x3, 0x1, 0x60, 0x1, 0x11, 0, 0, 0, 0x11, 0x40, 0xa, 0x1, 0x25, 0, 0, 0, 0x1, 0x78, 0x1, 0x10, 0x7, 0, 0, 0, 0x22, 0x1, 0, 0x2, 0x1f, 0x3, 0, 0, 0, 0x3, 0x3b, 0x2, 0x3, 0x1, 0x60, 0x1, 0x11, 0, 0, 0, 0x11, 0x40, 0xa, 0x1, 0x25, 0, 0, 0, 0x1, 0x78, 0x1, 0x10, 0x8, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0x6, 0x1, 0x1, 0x15, 0, 0, 0, 0x29, 0, 0, 0, 0, 0x11, 0x40, 0xb, 0x2, 0x28, 0, 0x2, 0x21, 0, 0x1, 0x1, 0x2, 0x22, 0, 0, 0x3, 0x8, 0x2, 0x3, 0x1, 0, 
/* Predicate 5: */0, 
/* Predicate 6: */0x10, 0x8, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0x4, 0x1, 0x1, 0x15, 0, 0, 0, 0x29, 0, 0, 0, 0, 0x11, 0x40, 0xb, 0x2, 0x28, 0, 0x2, 0x21, 0, 0, 0x1, 0x2, 0x22, 0, 0x1, 0x3, 0x8, 0x2, 0x3, 0x1, 0x10, 0xd, 0, 0, 0, 0x11, 0x40, 0x1, 0x1, 0x21, 0, 0, 0, 0x1, 0x79, 0x1, 0, 
/* Predicate 7: */0x10, 0xb, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0xb, 0x1, 0, 0x19, 0, 0, 0, 0x32, 0, 0, 0, 0x1, 0, 0x2, 0, 0, 0x11, 0x40, 0x6, 0x2, 0x22, 0x1, 0x1, 0x3, 0x1f, 0x1, 0, 0, 0, 0x4, 0x3d, 0x3, 0x4, 0x3, 0x26, 0x3, 0, 0x2, 0x78, 0x2, 0x1, 0, 
/* Predicate 8: */0x10, 0x9, 0, 0, 0, 0x11, 0x40, 0x6, 0, 0x1e, 0, 0, 0, 0, 0, 0, 0x78, 0, 0, 
/* Predicate 9: */0x10, 0xc, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0xb, 0x1, 0, 0x19, 0, 0, 0, 0x32, 0, 0, 0, 0x1, 0, 0x2, 0, 0, 0x11, 0x40, 0x6, 0x2, 0x22, 0x1, 0x1, 0x3, 0x1f, 0x1, 0, 0, 0, 0x4, 0x3a, 0x3, 0x4, 0x3, 0x26, 0x3, 0, 0x2, 0x78, 0x2, 0x1, 0, 
/* Predicate 10: */0x10, 0xa, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0xb, 0x1, 0, 0x19, 0, 0, 0, 0x25, 0, 0, 0, 0x1, 0, 0x2, 0, 0, 0x11, 0x40, 0x6, 0x2, 0x21, 0x1, 0x1, 0, 0x2, 0x78, 0x2, 0x1, 0, 
/* Predicate 11: */0x10, 0xa, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0xa, 0x1, 0, 0x19, 0, 0, 0, 0x25, 0, 0, 0, 0x1, 0, 0x2, 0, 0, 0x11, 0x40, 0x6, 0x2, 0x21, 0x1, 0, 0, 0x2, 0x78, 0x2, 0x1, 0x10, 0xb, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0x7, 0x1, 0, 0x19, 0, 0, 0, 0x32, 0, 0, 0, 0x1, 0, 0x2, 0, 0, 0x11, 0x40, 0x6, 0x2, 0x22, 0x1, 0, 0x3, 0x1f, 0x1, 0, 0, 0, 0x4, 0x3d, 0x3, 0x4, 0x3, 0x26, 0x3, 0, 0x2, 0x78, 0x2, 0x1, 0x10, 0xc, 0, 0, 0, 0x2, 0, 0, 0, 0, 0, 0, 0, 0, 0x9, 0x1, 0, 0x19, 0, 0, 0, 0x32, 0, 0, 0, 0x1, 0, 0x2, 0, 0, 0x11, 0x40, 0x6, 0x2, 0x22, 0x1, 0, 0x3, 0x1f, 0x1, 0, 0, 0, 0x4, 0x3a, 0x3, 0x4, 0x3, 0x26, 0x3, 0, 0x2, 0x78, 0x2, 0x1, 0, 
/* RULE BYTECODE */
/* Rule 0: */0x10, 0, 0, 0, 0, 0x5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x1, 0x15, 0, 0, 0, 0x24, 0, 0, 0, 0, 0x11, 0x80, 0, 0x23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0xf0, 0x1, 0, };

char *tuple_names[] = {"_init", "setcolor2", "vacant", "tap", "neighbor", "neighborCount", "level", "bottomNeighbor", "noBottomNeighbor", "topNeighbor", "sideNeighbor", "neighbor-level", };

char *rule_names[] = {"_init -o node-axioms.", };

#include "extern_functions.bbh"
Register (*extern_functs[])() = {};

int extern_functs_args[] = {};
